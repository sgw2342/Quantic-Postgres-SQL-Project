-- This file contains the SQL queries utilised to generate insights into business performance 

-- Setting Search Path to Production schema

set search_path=production;

-- Query 1
-- The following query finds the best selling products in terms of units sold

SELECT product_detail, SUM(transaction_qty) AS total_sold
FROM transaction_details
JOIN products ON transaction_details.product_id = products.product_id
GROUP BY product_detail
ORDER BY total_sold DESC;

-- Query 2
-- Query to retrieve the highest revenue generating products

SELECT product_detail, SUM(transaction_qty * unit_price) AS total_revenue
FROM transaction_details
JOIN products ON transaction_details.product_id = products.product_id
GROUP BY product_detail
ORDER BY total_revenue DESC;

-- Query 3
-- Store performance (by Revenue)

SELECT store_location, SUM(transaction_qty * unit_price) AS total_revenue
FROM transaction_details
JOIN transactions ON transaction_details.transaction_id = transactions.transaction_id
JOIN stores ON transactions.store_id = stores.store_id
GROUP BY store_location
ORDER BY total_revenue DESC;

-- Query 4
-- Performance by month

SELECT EXTRACT(MONTH FROM transaction_date) AS month, SUM(transaction_qty) AS total_sales
FROM transactions
JOIN transaction_details ON transactions.transaction_id = transaction_details.transaction_id
GROUP BY month
ORDER BY total_sales DESC;

-- Query 5
-- Performance (in transactions) by day of week

SELECT TO_CHAR(transaction_date, 'Day') AS day_of_week, COUNT(transaction_id) AS transaction_count
FROM transactions
GROUP BY day_of_week
ORDER BY transaction_count DESC;

-- Query 6
-- Performance (in revenue) by store by day of week

SELECT 
    stores.store_location,
    TO_CHAR(transactions.transaction_date, 'Day') AS day_of_week,
    SUM(transaction_details.transaction_qty * transaction_details.unit_price) AS total_revenue
FROM transactions
JOIN transaction_details ON transactions.transaction_id = transaction_details.transaction_id
JOIN stores ON transactions.store_id = stores.store_id
GROUP BY stores.store_location, day_of_week
ORDER BY stores.store_location, total_revenue DESC;
